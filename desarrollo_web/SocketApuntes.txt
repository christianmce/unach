## -----------------------------------------------------------------------------------------------------
Referencias para crear un Server usando PostgreSQL:
-  https://whatsyourssn.com/posts/real-time-app-socket-postgresql/
-  https://martiriera.medium.com/socket-io-postgresql-and-knex-js-be973e5e8880
-  https://socket.io/docs/v4/postgres-adapter/

# ------------------------------------------------------------------------------------------------------
#Client-Side Vue app

npm install vue-socket.io socket.io socket.io-client
npm install vue-3-socket.io --save

#File main.js
import VueSocketIO from 'vue-3-socket.io';

app.use(
    new VueSocketIO({
        connection: 'http://localhost:3000'
    })
);


<script>
export default {
    data() {
        return {
            message: '',
            messages: []
        };
    },
    sockets: {
        connect() {
            console.log('Connected to server');
        },
        disconnect() {
            console.log('Disconnected from server');
        },
        'chat message'(msg) {
            this.messages.push(msg);
        }
    },
    methods: {
        sendMessage() {
            if (this.message.trim() !== '') {
                this.$socket.emit('chat message', this.message);
                this.message = '';
            }
        }
    }
};
</script>

<template>
    <div id="app">
        <h1>Vue.js Socket.io Chat</h1>
        <input v-model="message" @keyup.enter="sendMessage" />
        <button @click="sendMessage">Send</button>
        <ul>
            <li v-for="msg in messages" :key="msg">{{ msg }}</li>
        </ul>
    </div>
</template>




# ----------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------

#Server-Side NodeJS  #Facultad de Negocios UNACH <Dr. Christian Mauricio Castillo Estrada>

npm install socket.io
npm install express

const express = require('express');
const app = express();
const server = require('http').createServer(app);
const io = require('socket.io')(server,{
  allowEIO3: true,
  cors: {
    origin: "http://localhost:5173", 
	credentials: true,
    methods: ["GET", "POST"]
  }
});

io.on('connection', (socket) => {
  console.log('User connected');

  socket.on('disconnect', () => {
    console.log('User disconnected');
  });

  socket.on('chat message', (msg) => {
    io.emit('chat message', msg);
	console.log('Recibiendo respuesta del cliente ...' + msg);
  });
});

server.listen(3000, () => {
  console.log('Listening on *:3000');
});
